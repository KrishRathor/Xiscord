// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  username      String    @unique
  email         String    @unique
  emailVerified Boolean   @default(false)
  password      String
  image         String?
  thisUser      Friend[]  @relation("UserFriends1")
  friends       Friend[]  @relation("UserFriends2")
  messageFrom   Message[] @relation("FromUser")
  messageTo     Message[] @relation("ToUser")
}

model Friend {
  id       Int    @id @default(autoincrement())
  user     User   @relation("UserFriends1", fields: [userId], references: [username])
  friend   User   @relation("UserFriends2", fields: [friendId], references: [username])
  userId   String
  friendId String

  @@unique([userId, friendId])
}

model Message {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  content      String
  from         User     @relation("FromUser", fields: [fromUsername], references: [username])
  fromUsername String
  to           User     @relation("ToUser", fields: [toUsername], references: [username])
  toUsername   String
}

model Server {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  admin String
  serverName String @unique
  users String[]
}
